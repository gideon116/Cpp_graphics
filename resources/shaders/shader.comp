#version 450
layout(local_size_x = 16, local_size_y = 16) in;
layout(binding = 0) readonly buffer MatA {
    float elements[];
} a;
layout(binding = 1) readonly buffer MatB {
    float elements[];
} b;
layout(binding = 2) writeonly buffer MatC {
    float elements[];
} c;
layout(push_constant) uniform MatInfo {
    uint M;
    uint N;
    uint P;
} info;
void main() {
    uint row = gl_GlobalInvocationID.y;
    uint col = gl_GlobalInvocationID.x;
    if (row >= info.M || col >= info.P) return;
    float sum = 0.0;
    for (uint k = 0; k < info.N; ++k) {
        sum += a.elements[row * info.N + k] * b.elements[k * info.P + col];
    }
    c.elements[row * info.P + col] = sum;
}